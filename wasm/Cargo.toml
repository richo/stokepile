[package]
name = "stokepile-wasm"
version = "0.2.0"
authors = ["Richo Healey <richo@psych0tik.net>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.89", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.39"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
js-sys = "0.3.66"

stokepile-shared = { path = "../shared" }

serde = { version = "1.0.193", features = ["derive"] }
serde_derive = "1.0.193"
hex = "0.4.3"
uuid = { version = "1.6.1", features = ["js"] }
handlebars = "4.5.0"

[dependencies.web-sys]
version = "0.3.66"
features = [
  "Document",
  "Element",
  "Headers",
  "HtmlElement",
  "HtmlCollection",
  "Node",
  "Request",
  "RequestInit",
  "RequestMode",
  "Response",
  "Window",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.39"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
